/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses.tables.records;


import br.com.edfcbz.api.generatedclasses.tables.CustomerHasAddress;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerHasAddressRecord extends UpdatableRecordImpl<CustomerHasAddressRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1108899625;

    /**
     * Setter for <code>apirest.customer_has_address.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>apirest.customer_has_address.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>apirest.customer_has_address.address_id</code>.
     */
    public void setAddressId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>apirest.customer_has_address.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>apirest.customer_has_address.type_address_id</code>.
     */
    public void setTypeAddressId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>apirest.customer_has_address.type_address_id</code>.
     */
    public Integer getTypeAddressId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>apirest.customer_has_address.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>apirest.customer_has_address.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CustomerHasAddress.CUSTOMER_HAS_ADDRESS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CustomerHasAddress.CUSTOMER_HAS_ADDRESS.ADDRESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return CustomerHasAddress.CUSTOMER_HAS_ADDRESS.TYPE_ADDRESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return CustomerHasAddress.CUSTOMER_HAS_ADDRESS.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTypeAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTypeAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerHasAddressRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerHasAddressRecord value2(Integer value) {
        setAddressId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerHasAddressRecord value3(Integer value) {
        setTypeAddressId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerHasAddressRecord value4(Integer value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerHasAddressRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerHasAddressRecord
     */
    public CustomerHasAddressRecord() {
        super(CustomerHasAddress.CUSTOMER_HAS_ADDRESS);
    }

    /**
     * Create a detached, initialised CustomerHasAddressRecord
     */
    public CustomerHasAddressRecord(Integer id, Integer addressId, Integer typeAddressId, Integer customerId) {
        super(CustomerHasAddress.CUSTOMER_HAS_ADDRESS);

        set(0, id);
        set(1, addressId);
        set(2, typeAddressId);
        set(3, customerId);
    }
}
