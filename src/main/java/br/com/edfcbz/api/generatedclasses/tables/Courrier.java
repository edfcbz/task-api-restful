/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses.tables;


import br.com.edfcbz.api.generatedclasses.Apirest;
import br.com.edfcbz.api.generatedclasses.Indexes;
import br.com.edfcbz.api.generatedclasses.Keys;
import br.com.edfcbz.api.generatedclasses.tables.records.CourrierRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Courrier extends TableImpl<CourrierRecord> {

    private static final long serialVersionUID = 397382088;

    /**
     * The reference instance of <code>apirest.courrier</code>
     */
    public static final Courrier COURRIER = new Courrier();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourrierRecord> getRecordType() {
        return CourrierRecord.class;
    }

    /**
     * The column <code>apirest.courrier.id</code>.
     */
    public final TableField<CourrierRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>apirest.courrier.name</code>.
     */
    public final TableField<CourrierRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>apirest.courrier.address_id</code>.
     */
    public final TableField<CourrierRecord, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>apirest.courrier</code> table reference
     */
    public Courrier() {
        this(DSL.name("courrier"), null);
    }

    /**
     * Create an aliased <code>apirest.courrier</code> table reference
     */
    public Courrier(String alias) {
        this(DSL.name(alias), COURRIER);
    }

    /**
     * Create an aliased <code>apirest.courrier</code> table reference
     */
    public Courrier(Name alias) {
        this(alias, COURRIER);
    }

    private Courrier(Name alias, Table<CourrierRecord> aliased) {
        this(alias, aliased, null);
    }

    private Courrier(Name alias, Table<CourrierRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Apirest.APIREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COURRIER_FK_COURRIER_ADDRESS1_IDX, Indexes.COURRIER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourrierRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURRIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourrierRecord> getPrimaryKey() {
        return Keys.KEY_COURRIER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourrierRecord>> getKeys() {
        return Arrays.<UniqueKey<CourrierRecord>>asList(Keys.KEY_COURRIER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourrierRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourrierRecord, ?>>asList(Keys.FK_COURRIER_ADDRESS1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Courrier as(String alias) {
        return new Courrier(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Courrier as(Name alias) {
        return new Courrier(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Courrier rename(String name) {
        return new Courrier(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Courrier rename(Name name) {
        return new Courrier(name, null);
    }
}
