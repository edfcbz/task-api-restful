/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses.tables;


import br.com.edfcbz.api.generatedclasses.Apirest;
import br.com.edfcbz.api.generatedclasses.Indexes;
import br.com.edfcbz.api.generatedclasses.Keys;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderHasStatusRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderHasStatus extends TableImpl<OrderHasStatusRecord> {

    private static final long serialVersionUID = -280136820;

    /**
     * The reference instance of <code>apirest.order_has_status</code>
     */
    public static final OrderHasStatus ORDER_HAS_STATUS = new OrderHasStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderHasStatusRecord> getRecordType() {
        return OrderHasStatusRecord.class;
    }

    /**
     * The column <code>apirest.order_has_status.id</code>.
     */
    public final TableField<OrderHasStatusRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>apirest.order_has_status.order_id</code>.
     */
    public final TableField<OrderHasStatusRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>apirest.order_has_status.order_status_domain_id</code>.
     */
    public final TableField<OrderHasStatusRecord, Integer> ORDER_STATUS_DOMAIN_ID = createField("order_status_domain_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>apirest.order_has_status.update</code>.
     */
    public final TableField<OrderHasStatusRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>apirest.order_has_status</code> table reference
     */
    public OrderHasStatus() {
        this(DSL.name("order_has_status"), null);
    }

    /**
     * Create an aliased <code>apirest.order_has_status</code> table reference
     */
    public OrderHasStatus(String alias) {
        this(DSL.name(alias), ORDER_HAS_STATUS);
    }

    /**
     * Create an aliased <code>apirest.order_has_status</code> table reference
     */
    public OrderHasStatus(Name alias) {
        this(alias, ORDER_HAS_STATUS);
    }

    private OrderHasStatus(Name alias, Table<OrderHasStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderHasStatus(Name alias, Table<OrderHasStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Apirest.APIREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDER_HAS_STATUS_FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER1_IDX, Indexes.ORDER_HAS_STATUS_FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER_STATUS_DOMAIN1_IDX, Indexes.ORDER_HAS_STATUS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderHasStatusRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORDER_HAS_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderHasStatusRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_HAS_STATUS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderHasStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderHasStatusRecord>>asList(Keys.KEY_ORDER_HAS_STATUS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderHasStatusRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderHasStatusRecord, ?>>asList(Keys.FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER1, Keys.FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER_STATUS_DOMAIN1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatus as(String alias) {
        return new OrderHasStatus(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatus as(Name alias) {
        return new OrderHasStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderHasStatus rename(String name) {
        return new OrderHasStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderHasStatus rename(Name name) {
        return new OrderHasStatus(name, null);
    }
}
