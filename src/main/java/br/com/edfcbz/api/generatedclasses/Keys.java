/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses;


import br.com.edfcbz.api.generatedclasses.tables.Address;
import br.com.edfcbz.api.generatedclasses.tables.Availability;
import br.com.edfcbz.api.generatedclasses.tables.City;
import br.com.edfcbz.api.generatedclasses.tables.Country;
import br.com.edfcbz.api.generatedclasses.tables.Courrier;
import br.com.edfcbz.api.generatedclasses.tables.CourrierAvailability;
import br.com.edfcbz.api.generatedclasses.tables.CourrierHasNeighborhood;
import br.com.edfcbz.api.generatedclasses.tables.Cousine;
import br.com.edfcbz.api.generatedclasses.tables.Customer;
import br.com.edfcbz.api.generatedclasses.tables.CustomerHasAddress;
import br.com.edfcbz.api.generatedclasses.tables.Delivery;
import br.com.edfcbz.api.generatedclasses.tables.DeliveryHasStatusDeliveryDomain;
import br.com.edfcbz.api.generatedclasses.tables.Neighborhood;
import br.com.edfcbz.api.generatedclasses.tables.Order;
import br.com.edfcbz.api.generatedclasses.tables.OrderHasProduct;
import br.com.edfcbz.api.generatedclasses.tables.OrderHasStatus;
import br.com.edfcbz.api.generatedclasses.tables.OrderStatusDomain;
import br.com.edfcbz.api.generatedclasses.tables.OrderStore;
import br.com.edfcbz.api.generatedclasses.tables.Product;
import br.com.edfcbz.api.generatedclasses.tables.ProductHasStore;
import br.com.edfcbz.api.generatedclasses.tables.Province;
import br.com.edfcbz.api.generatedclasses.tables.StatusDeliveryDomain;
import br.com.edfcbz.api.generatedclasses.tables.StatusStore;
import br.com.edfcbz.api.generatedclasses.tables.Store;
import br.com.edfcbz.api.generatedclasses.tables.StoreHasAddress;
import br.com.edfcbz.api.generatedclasses.tables.StoreHasCousine;
import br.com.edfcbz.api.generatedclasses.tables.TypeAddress;
import br.com.edfcbz.api.generatedclasses.tables.records.AddressRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.AvailabilityRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CityRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CountryRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CourrierAvailabilityRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CourrierHasNeighborhoodRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CourrierRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CousineRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CustomerHasAddressRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.CustomerRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.DeliveryHasStatusDeliveryDomainRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.DeliveryRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.NeighborhoodRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderHasProductRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderHasStatusRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderStatusDomainRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.OrderStoreRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.ProductHasStoreRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.ProductRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.ProvinceRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.StatusDeliveryDomainRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.StatusStoreRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.StoreHasAddressRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.StoreHasCousineRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.StoreRecord;
import br.com.edfcbz.api.generatedclasses.tables.records.TypeAddressRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>apirest</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AddressRecord, Integer> IDENTITY_ADDRESS = Identities0.IDENTITY_ADDRESS;
    public static final Identity<AvailabilityRecord, Integer> IDENTITY_AVAILABILITY = Identities0.IDENTITY_AVAILABILITY;
    public static final Identity<CityRecord, Integer> IDENTITY_CITY = Identities0.IDENTITY_CITY;
    public static final Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Identities0.IDENTITY_COUNTRY;
    public static final Identity<CourrierRecord, Integer> IDENTITY_COURRIER = Identities0.IDENTITY_COURRIER;
    public static final Identity<CourrierAvailabilityRecord, Integer> IDENTITY_COURRIER_AVAILABILITY = Identities0.IDENTITY_COURRIER_AVAILABILITY;
    public static final Identity<CourrierHasNeighborhoodRecord, Integer> IDENTITY_COURRIER_HAS_NEIGHBORHOOD = Identities0.IDENTITY_COURRIER_HAS_NEIGHBORHOOD;
    public static final Identity<CousineRecord, Integer> IDENTITY_COUSINE = Identities0.IDENTITY_COUSINE;
    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<CustomerHasAddressRecord, Integer> IDENTITY_CUSTOMER_HAS_ADDRESS = Identities0.IDENTITY_CUSTOMER_HAS_ADDRESS;
    public static final Identity<DeliveryRecord, Integer> IDENTITY_DELIVERY = Identities0.IDENTITY_DELIVERY;
    public static final Identity<DeliveryHasStatusDeliveryDomainRecord, Integer> IDENTITY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN = Identities0.IDENTITY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN;
    public static final Identity<NeighborhoodRecord, Integer> IDENTITY_NEIGHBORHOOD = Identities0.IDENTITY_NEIGHBORHOOD;
    public static final Identity<OrderRecord, Integer> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;
    public static final Identity<OrderHasProductRecord, Integer> IDENTITY_ORDER_HAS_PRODUCT = Identities0.IDENTITY_ORDER_HAS_PRODUCT;
    public static final Identity<OrderHasStatusRecord, Integer> IDENTITY_ORDER_HAS_STATUS = Identities0.IDENTITY_ORDER_HAS_STATUS;
    public static final Identity<OrderStatusDomainRecord, Integer> IDENTITY_ORDER_STATUS_DOMAIN = Identities0.IDENTITY_ORDER_STATUS_DOMAIN;
    public static final Identity<OrderStoreRecord, Integer> IDENTITY_ORDER_STORE = Identities0.IDENTITY_ORDER_STORE;
    public static final Identity<ProductRecord, Integer> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;
    public static final Identity<ProductHasStoreRecord, Integer> IDENTITY_PRODUCT_HAS_STORE = Identities0.IDENTITY_PRODUCT_HAS_STORE;
    public static final Identity<ProvinceRecord, Integer> IDENTITY_PROVINCE = Identities0.IDENTITY_PROVINCE;
    public static final Identity<StatusDeliveryDomainRecord, Integer> IDENTITY_STATUS_DELIVERY_DOMAIN = Identities0.IDENTITY_STATUS_DELIVERY_DOMAIN;
    public static final Identity<StatusStoreRecord, Integer> IDENTITY_STATUS_STORE = Identities0.IDENTITY_STATUS_STORE;
    public static final Identity<StoreRecord, Integer> IDENTITY_STORE = Identities0.IDENTITY_STORE;
    public static final Identity<StoreHasAddressRecord, Integer> IDENTITY_STORE_HAS_ADDRESS = Identities0.IDENTITY_STORE_HAS_ADDRESS;
    public static final Identity<StoreHasCousineRecord, Integer> IDENTITY_STORE_HAS_COUSINE = Identities0.IDENTITY_STORE_HAS_COUSINE;
    public static final Identity<TypeAddressRecord, Integer> IDENTITY_TYPE_ADDRESS = Identities0.IDENTITY_TYPE_ADDRESS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = UniqueKeys0.KEY_ADDRESS_PRIMARY;
    public static final UniqueKey<AvailabilityRecord> KEY_AVAILABILITY_PRIMARY = UniqueKeys0.KEY_AVAILABILITY_PRIMARY;
    public static final UniqueKey<CityRecord> KEY_CITY_PRIMARY = UniqueKeys0.KEY_CITY_PRIMARY;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = UniqueKeys0.KEY_COUNTRY_PRIMARY;
    public static final UniqueKey<CourrierRecord> KEY_COURRIER_PRIMARY = UniqueKeys0.KEY_COURRIER_PRIMARY;
    public static final UniqueKey<CourrierAvailabilityRecord> KEY_COURRIER_AVAILABILITY_PRIMARY = UniqueKeys0.KEY_COURRIER_AVAILABILITY_PRIMARY;
    public static final UniqueKey<CourrierHasNeighborhoodRecord> KEY_COURRIER_HAS_NEIGHBORHOOD_PRIMARY = UniqueKeys0.KEY_COURRIER_HAS_NEIGHBORHOOD_PRIMARY;
    public static final UniqueKey<CousineRecord> KEY_COUSINE_PRIMARY = UniqueKeys0.KEY_COUSINE_PRIMARY;
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = UniqueKeys0.KEY_CUSTOMER_PRIMARY;
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_ID_UNIQUE = UniqueKeys0.KEY_CUSTOMER_ID_UNIQUE;
    public static final UniqueKey<CustomerHasAddressRecord> KEY_CUSTOMER_HAS_ADDRESS_PRIMARY = UniqueKeys0.KEY_CUSTOMER_HAS_ADDRESS_PRIMARY;
    public static final UniqueKey<DeliveryRecord> KEY_DELIVERY_PRIMARY = UniqueKeys0.KEY_DELIVERY_PRIMARY;
    public static final UniqueKey<DeliveryHasStatusDeliveryDomainRecord> KEY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_PRIMARY = UniqueKeys0.KEY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_PRIMARY;
    public static final UniqueKey<NeighborhoodRecord> KEY_NEIGHBORHOOD_PRIMARY = UniqueKeys0.KEY_NEIGHBORHOOD_PRIMARY;
    public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = UniqueKeys0.KEY_ORDER_PRIMARY;
    public static final UniqueKey<OrderRecord> KEY_ORDER_ID_UNIQUE = UniqueKeys0.KEY_ORDER_ID_UNIQUE;
    public static final UniqueKey<OrderHasProductRecord> KEY_ORDER_HAS_PRODUCT_PRIMARY = UniqueKeys0.KEY_ORDER_HAS_PRODUCT_PRIMARY;
    public static final UniqueKey<OrderHasStatusRecord> KEY_ORDER_HAS_STATUS_PRIMARY = UniqueKeys0.KEY_ORDER_HAS_STATUS_PRIMARY;
    public static final UniqueKey<OrderStatusDomainRecord> KEY_ORDER_STATUS_DOMAIN_PRIMARY = UniqueKeys0.KEY_ORDER_STATUS_DOMAIN_PRIMARY;
    public static final UniqueKey<OrderStoreRecord> KEY_ORDER_STORE_PRIMARY = UniqueKeys0.KEY_ORDER_STORE_PRIMARY;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRIMARY;
    public static final UniqueKey<ProductHasStoreRecord> KEY_PRODUCT_HAS_STORE_PRIMARY = UniqueKeys0.KEY_PRODUCT_HAS_STORE_PRIMARY;
    public static final UniqueKey<ProvinceRecord> KEY_PROVINCE_PRIMARY = UniqueKeys0.KEY_PROVINCE_PRIMARY;
    public static final UniqueKey<StatusDeliveryDomainRecord> KEY_STATUS_DELIVERY_DOMAIN_PRIMARY = UniqueKeys0.KEY_STATUS_DELIVERY_DOMAIN_PRIMARY;
    public static final UniqueKey<StatusStoreRecord> KEY_STATUS_STORE_PRIMARY = UniqueKeys0.KEY_STATUS_STORE_PRIMARY;
    public static final UniqueKey<StoreRecord> KEY_STORE_PRIMARY = UniqueKeys0.KEY_STORE_PRIMARY;
    public static final UniqueKey<StoreHasAddressRecord> KEY_STORE_HAS_ADDRESS_PRIMARY = UniqueKeys0.KEY_STORE_HAS_ADDRESS_PRIMARY;
    public static final UniqueKey<StoreHasCousineRecord> KEY_STORE_HAS_COUSINE_PRIMARY = UniqueKeys0.KEY_STORE_HAS_COUSINE_PRIMARY;
    public static final UniqueKey<TypeAddressRecord> KEY_TYPE_ADDRESS_PRIMARY = UniqueKeys0.KEY_TYPE_ADDRESS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressRecord, CityRecord> FK_ADDRESS_CITY1 = ForeignKeys0.FK_ADDRESS_CITY1;
    public static final ForeignKey<AddressRecord, NeighborhoodRecord> FK_ADDRESS_NEIGHBORHOOD1 = ForeignKeys0.FK_ADDRESS_NEIGHBORHOOD1;
    public static final ForeignKey<CityRecord, ProvinceRecord> FK_CITY_PROVINCE1 = ForeignKeys0.FK_CITY_PROVINCE1;
    public static final ForeignKey<CourrierRecord, AddressRecord> FK_COURRIER_ADDRESS1 = ForeignKeys0.FK_COURRIER_ADDRESS1;
    public static final ForeignKey<CourrierAvailabilityRecord, CourrierRecord> FK_COURRIER_HAS_AVAILABILITY_COURRIER1 = ForeignKeys0.FK_COURRIER_HAS_AVAILABILITY_COURRIER1;
    public static final ForeignKey<CourrierAvailabilityRecord, AvailabilityRecord> FK_COURRIER_HAS_AVAILABILITY_AVAILABILITY1 = ForeignKeys0.FK_COURRIER_HAS_AVAILABILITY_AVAILABILITY1;
    public static final ForeignKey<CourrierHasNeighborhoodRecord, CourrierRecord> FK_COURRIER_HAS_NEIGHBORHOOD_COURRIER1 = ForeignKeys0.FK_COURRIER_HAS_NEIGHBORHOOD_COURRIER1;
    public static final ForeignKey<CourrierHasNeighborhoodRecord, NeighborhoodRecord> FK_COURRIER_HAS_NEIGHBORHOOD_NEIGHBORHOOD1 = ForeignKeys0.FK_COURRIER_HAS_NEIGHBORHOOD_NEIGHBORHOOD1;
    public static final ForeignKey<CustomerHasAddressRecord, AddressRecord> FK_CUSTOMER_HAS_ADDRESS_ADDRESS1 = ForeignKeys0.FK_CUSTOMER_HAS_ADDRESS_ADDRESS1;
    public static final ForeignKey<CustomerHasAddressRecord, TypeAddressRecord> FK_CUSTOMER_HAS_ADDRESS_TYPE_ADDRESS1 = ForeignKeys0.FK_CUSTOMER_HAS_ADDRESS_TYPE_ADDRESS1;
    public static final ForeignKey<CustomerHasAddressRecord, CustomerRecord> FK_CUSTOMER_HAS_ADDRESS_CUSTOMER1 = ForeignKeys0.FK_CUSTOMER_HAS_ADDRESS_CUSTOMER1;
    public static final ForeignKey<DeliveryRecord, CourrierRecord> FK_DELIVERY_COURRIER1 = ForeignKeys0.FK_DELIVERY_COURRIER1;
    public static final ForeignKey<DeliveryHasStatusDeliveryDomainRecord, DeliveryRecord> FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_DELIVERY1 = ForeignKeys0.FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_DELIVERY1;
    public static final ForeignKey<DeliveryHasStatusDeliveryDomainRecord, StatusDeliveryDomainRecord> FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_STATUS_DELIVERY_DOMAIN1 = ForeignKeys0.FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_STATUS_DELIVERY_DOMAIN1;
    public static final ForeignKey<OrderRecord, DeliveryRecord> FK_ORDER_DELIVERY1 = ForeignKeys0.FK_ORDER_DELIVERY1;
    public static final ForeignKey<OrderRecord, CustomerRecord> FK_ORDER_CUSTOMER1 = ForeignKeys0.FK_ORDER_CUSTOMER1;
    public static final ForeignKey<OrderHasProductRecord, OrderRecord> FK_ORDER_HAS_PRODUCT_ORDER1 = ForeignKeys0.FK_ORDER_HAS_PRODUCT_ORDER1;
    public static final ForeignKey<OrderHasProductRecord, ProductRecord> FK_ORDER_HAS_PRODUCT_PRODUCT1 = ForeignKeys0.FK_ORDER_HAS_PRODUCT_PRODUCT1;
    public static final ForeignKey<OrderHasStatusRecord, OrderRecord> FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER1 = ForeignKeys0.FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER1;
    public static final ForeignKey<OrderHasStatusRecord, OrderStatusDomainRecord> FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER_STATUS_DOMAIN1 = ForeignKeys0.FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER_STATUS_DOMAIN1;
    public static final ForeignKey<OrderStoreRecord, OrderRecord> FK_ORDER_HAS_STORE_ORDER1 = ForeignKeys0.FK_ORDER_HAS_STORE_ORDER1;
    public static final ForeignKey<OrderStoreRecord, StoreRecord> FK_ORDER_HAS_STORE_STORE1 = ForeignKeys0.FK_ORDER_HAS_STORE_STORE1;
    public static final ForeignKey<ProductHasStoreRecord, ProductRecord> FK_PRODUCT_HAS_STORE_PRODUCT1 = ForeignKeys0.FK_PRODUCT_HAS_STORE_PRODUCT1;
    public static final ForeignKey<ProductHasStoreRecord, StoreRecord> FK_PRODUCT_HAS_STORE_STORE1 = ForeignKeys0.FK_PRODUCT_HAS_STORE_STORE1;
    public static final ForeignKey<ProvinceRecord, CountryRecord> FK_PROVINCE_COUNTRY1 = ForeignKeys0.FK_PROVINCE_COUNTRY1;
    public static final ForeignKey<StoreRecord, StatusStoreRecord> FK_STORE_STATUS_STORE1 = ForeignKeys0.FK_STORE_STATUS_STORE1;
    public static final ForeignKey<StoreHasAddressRecord, StoreRecord> FK_STORE_HAS_ADDRESS_STORE1 = ForeignKeys0.FK_STORE_HAS_ADDRESS_STORE1;
    public static final ForeignKey<StoreHasAddressRecord, AddressRecord> FK_STORE_HAS_ADDRESS_ADDRESS1 = ForeignKeys0.FK_STORE_HAS_ADDRESS_ADDRESS1;
    public static final ForeignKey<StoreHasCousineRecord, StoreRecord> FK_STORE_HAS_COUSINE_STORE1 = ForeignKeys0.FK_STORE_HAS_COUSINE_STORE1;
    public static final ForeignKey<StoreHasCousineRecord, CousineRecord> FK_STORE_HAS_COUSINE_COUSINE1 = ForeignKeys0.FK_STORE_HAS_COUSINE_COUSINE1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AddressRecord, Integer> IDENTITY_ADDRESS = Internal.createIdentity(Address.ADDRESS, Address.ADDRESS.ID);
        public static Identity<AvailabilityRecord, Integer> IDENTITY_AVAILABILITY = Internal.createIdentity(Availability.AVAILABILITY, Availability.AVAILABILITY.ID);
        public static Identity<CityRecord, Integer> IDENTITY_CITY = Internal.createIdentity(City.CITY, City.CITY.ID);
        public static Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Internal.createIdentity(Country.COUNTRY, Country.COUNTRY.ID);
        public static Identity<CourrierRecord, Integer> IDENTITY_COURRIER = Internal.createIdentity(Courrier.COURRIER, Courrier.COURRIER.ID);
        public static Identity<CourrierAvailabilityRecord, Integer> IDENTITY_COURRIER_AVAILABILITY = Internal.createIdentity(CourrierAvailability.COURRIER_AVAILABILITY, CourrierAvailability.COURRIER_AVAILABILITY.ID);
        public static Identity<CourrierHasNeighborhoodRecord, Integer> IDENTITY_COURRIER_HAS_NEIGHBORHOOD = Internal.createIdentity(CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD, CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD.ID);
        public static Identity<CousineRecord, Integer> IDENTITY_COUSINE = Internal.createIdentity(Cousine.COUSINE, Cousine.COUSINE.ID);
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<CustomerHasAddressRecord, Integer> IDENTITY_CUSTOMER_HAS_ADDRESS = Internal.createIdentity(CustomerHasAddress.CUSTOMER_HAS_ADDRESS, CustomerHasAddress.CUSTOMER_HAS_ADDRESS.ID);
        public static Identity<DeliveryRecord, Integer> IDENTITY_DELIVERY = Internal.createIdentity(Delivery.DELIVERY, Delivery.DELIVERY.ID);
        public static Identity<DeliveryHasStatusDeliveryDomainRecord, Integer> IDENTITY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN = Internal.createIdentity(DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN, DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN.ID);
        public static Identity<NeighborhoodRecord, Integer> IDENTITY_NEIGHBORHOOD = Internal.createIdentity(Neighborhood.NEIGHBORHOOD, Neighborhood.NEIGHBORHOOD.ID);
        public static Identity<OrderRecord, Integer> IDENTITY_ORDER = Internal.createIdentity(Order.ORDER, Order.ORDER.ID);
        public static Identity<OrderHasProductRecord, Integer> IDENTITY_ORDER_HAS_PRODUCT = Internal.createIdentity(OrderHasProduct.ORDER_HAS_PRODUCT, OrderHasProduct.ORDER_HAS_PRODUCT.ID);
        public static Identity<OrderHasStatusRecord, Integer> IDENTITY_ORDER_HAS_STATUS = Internal.createIdentity(OrderHasStatus.ORDER_HAS_STATUS, OrderHasStatus.ORDER_HAS_STATUS.ID);
        public static Identity<OrderStatusDomainRecord, Integer> IDENTITY_ORDER_STATUS_DOMAIN = Internal.createIdentity(OrderStatusDomain.ORDER_STATUS_DOMAIN, OrderStatusDomain.ORDER_STATUS_DOMAIN.ID);
        public static Identity<OrderStoreRecord, Integer> IDENTITY_ORDER_STORE = Internal.createIdentity(OrderStore.ORDER_STORE, OrderStore.ORDER_STORE.ID);
        public static Identity<ProductRecord, Integer> IDENTITY_PRODUCT = Internal.createIdentity(Product.PRODUCT, Product.PRODUCT.ID);
        public static Identity<ProductHasStoreRecord, Integer> IDENTITY_PRODUCT_HAS_STORE = Internal.createIdentity(ProductHasStore.PRODUCT_HAS_STORE, ProductHasStore.PRODUCT_HAS_STORE.ID);
        public static Identity<ProvinceRecord, Integer> IDENTITY_PROVINCE = Internal.createIdentity(Province.PROVINCE, Province.PROVINCE.ID);
        public static Identity<StatusDeliveryDomainRecord, Integer> IDENTITY_STATUS_DELIVERY_DOMAIN = Internal.createIdentity(StatusDeliveryDomain.STATUS_DELIVERY_DOMAIN, StatusDeliveryDomain.STATUS_DELIVERY_DOMAIN.ID);
        public static Identity<StatusStoreRecord, Integer> IDENTITY_STATUS_STORE = Internal.createIdentity(StatusStore.STATUS_STORE, StatusStore.STATUS_STORE.ID);
        public static Identity<StoreRecord, Integer> IDENTITY_STORE = Internal.createIdentity(Store.STORE, Store.STORE.ID);
        public static Identity<StoreHasAddressRecord, Integer> IDENTITY_STORE_HAS_ADDRESS = Internal.createIdentity(StoreHasAddress.STORE_HAS_ADDRESS, StoreHasAddress.STORE_HAS_ADDRESS.ID);
        public static Identity<StoreHasCousineRecord, Integer> IDENTITY_STORE_HAS_COUSINE = Internal.createIdentity(StoreHasCousine.STORE_HAS_COUSINE, StoreHasCousine.STORE_HAS_COUSINE.ID);
        public static Identity<TypeAddressRecord, Integer> IDENTITY_TYPE_ADDRESS = Internal.createIdentity(TypeAddress.TYPE_ADDRESS, TypeAddress.TYPE_ADDRESS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = Internal.createUniqueKey(Address.ADDRESS, "KEY_address_PRIMARY", Address.ADDRESS.ID, Address.ADDRESS.CITY_ID, Address.ADDRESS.NEIGHBORHOOD_ID);
        public static final UniqueKey<AvailabilityRecord> KEY_AVAILABILITY_PRIMARY = Internal.createUniqueKey(Availability.AVAILABILITY, "KEY_availability_PRIMARY", Availability.AVAILABILITY.ID);
        public static final UniqueKey<CityRecord> KEY_CITY_PRIMARY = Internal.createUniqueKey(City.CITY, "KEY_city_PRIMARY", City.CITY.ID, City.CITY.PROVINCE_ID, City.CITY.NAME);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = Internal.createUniqueKey(Country.COUNTRY, "KEY_country_PRIMARY", Country.COUNTRY.ID);
        public static final UniqueKey<CourrierRecord> KEY_COURRIER_PRIMARY = Internal.createUniqueKey(Courrier.COURRIER, "KEY_courrier_PRIMARY", Courrier.COURRIER.ID, Courrier.COURRIER.ADDRESS_ID);
        public static final UniqueKey<CourrierAvailabilityRecord> KEY_COURRIER_AVAILABILITY_PRIMARY = Internal.createUniqueKey(CourrierAvailability.COURRIER_AVAILABILITY, "KEY_courrier_availability_PRIMARY", CourrierAvailability.COURRIER_AVAILABILITY.ID);
        public static final UniqueKey<CourrierHasNeighborhoodRecord> KEY_COURRIER_HAS_NEIGHBORHOOD_PRIMARY = Internal.createUniqueKey(CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD, "KEY_courrier_has_neighborhood_PRIMARY", CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD.ID);
        public static final UniqueKey<CousineRecord> KEY_COUSINE_PRIMARY = Internal.createUniqueKey(Cousine.COUSINE, "KEY_cousine_PRIMARY", Cousine.COUSINE.ID);
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_PRIMARY", Customer.CUSTOMER.ID);
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_ID_UNIQUE = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_id_UNIQUE", Customer.CUSTOMER.ID);
        public static final UniqueKey<CustomerHasAddressRecord> KEY_CUSTOMER_HAS_ADDRESS_PRIMARY = Internal.createUniqueKey(CustomerHasAddress.CUSTOMER_HAS_ADDRESS, "KEY_customer_has_address_PRIMARY", CustomerHasAddress.CUSTOMER_HAS_ADDRESS.ID);
        public static final UniqueKey<DeliveryRecord> KEY_DELIVERY_PRIMARY = Internal.createUniqueKey(Delivery.DELIVERY, "KEY_delivery_PRIMARY", Delivery.DELIVERY.ID);
        public static final UniqueKey<DeliveryHasStatusDeliveryDomainRecord> KEY_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_PRIMARY = Internal.createUniqueKey(DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN, "KEY_delivery_has_status_delivery_domain_PRIMARY", DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN.ID);
        public static final UniqueKey<NeighborhoodRecord> KEY_NEIGHBORHOOD_PRIMARY = Internal.createUniqueKey(Neighborhood.NEIGHBORHOOD, "KEY_neighborhood_PRIMARY", Neighborhood.NEIGHBORHOOD.ID);
        public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = Internal.createUniqueKey(Order.ORDER, "KEY_order_PRIMARY", Order.ORDER.ID);
        public static final UniqueKey<OrderRecord> KEY_ORDER_ID_UNIQUE = Internal.createUniqueKey(Order.ORDER, "KEY_order_id_UNIQUE", Order.ORDER.ID);
        public static final UniqueKey<OrderHasProductRecord> KEY_ORDER_HAS_PRODUCT_PRIMARY = Internal.createUniqueKey(OrderHasProduct.ORDER_HAS_PRODUCT, "KEY_order_has_product_PRIMARY", OrderHasProduct.ORDER_HAS_PRODUCT.ID);
        public static final UniqueKey<OrderHasStatusRecord> KEY_ORDER_HAS_STATUS_PRIMARY = Internal.createUniqueKey(OrderHasStatus.ORDER_HAS_STATUS, "KEY_order_has_status_PRIMARY", OrderHasStatus.ORDER_HAS_STATUS.ID);
        public static final UniqueKey<OrderStatusDomainRecord> KEY_ORDER_STATUS_DOMAIN_PRIMARY = Internal.createUniqueKey(OrderStatusDomain.ORDER_STATUS_DOMAIN, "KEY_order_status_domain_PRIMARY", OrderStatusDomain.ORDER_STATUS_DOMAIN.ID);
        public static final UniqueKey<OrderStoreRecord> KEY_ORDER_STORE_PRIMARY = Internal.createUniqueKey(OrderStore.ORDER_STORE, "KEY_order_store_PRIMARY", OrderStore.ORDER_STORE.ID);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = Internal.createUniqueKey(Product.PRODUCT, "KEY_product_PRIMARY", Product.PRODUCT.ID);
        public static final UniqueKey<ProductHasStoreRecord> KEY_PRODUCT_HAS_STORE_PRIMARY = Internal.createUniqueKey(ProductHasStore.PRODUCT_HAS_STORE, "KEY_product_has_store_PRIMARY", ProductHasStore.PRODUCT_HAS_STORE.ID);
        public static final UniqueKey<ProvinceRecord> KEY_PROVINCE_PRIMARY = Internal.createUniqueKey(Province.PROVINCE, "KEY_province_PRIMARY", Province.PROVINCE.ID);
        public static final UniqueKey<StatusDeliveryDomainRecord> KEY_STATUS_DELIVERY_DOMAIN_PRIMARY = Internal.createUniqueKey(StatusDeliveryDomain.STATUS_DELIVERY_DOMAIN, "KEY_status_delivery_domain_PRIMARY", StatusDeliveryDomain.STATUS_DELIVERY_DOMAIN.ID);
        public static final UniqueKey<StatusStoreRecord> KEY_STATUS_STORE_PRIMARY = Internal.createUniqueKey(StatusStore.STATUS_STORE, "KEY_status_store_PRIMARY", StatusStore.STATUS_STORE.ID);
        public static final UniqueKey<StoreRecord> KEY_STORE_PRIMARY = Internal.createUniqueKey(Store.STORE, "KEY_store_PRIMARY", Store.STORE.ID, Store.STORE.STATUS_STORE_ID);
        public static final UniqueKey<StoreHasAddressRecord> KEY_STORE_HAS_ADDRESS_PRIMARY = Internal.createUniqueKey(StoreHasAddress.STORE_HAS_ADDRESS, "KEY_store_has_address_PRIMARY", StoreHasAddress.STORE_HAS_ADDRESS.ID);
        public static final UniqueKey<StoreHasCousineRecord> KEY_STORE_HAS_COUSINE_PRIMARY = Internal.createUniqueKey(StoreHasCousine.STORE_HAS_COUSINE, "KEY_store_has_cousine_PRIMARY", StoreHasCousine.STORE_HAS_COUSINE.ID);
        public static final UniqueKey<TypeAddressRecord> KEY_TYPE_ADDRESS_PRIMARY = Internal.createUniqueKey(TypeAddress.TYPE_ADDRESS, "KEY_type_address_PRIMARY", TypeAddress.TYPE_ADDRESS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AddressRecord, CityRecord> FK_ADDRESS_CITY1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_CITY_PRIMARY, Address.ADDRESS, "fk_address_city1", Address.ADDRESS.CITY_ID);
        public static final ForeignKey<AddressRecord, NeighborhoodRecord> FK_ADDRESS_NEIGHBORHOOD1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_NEIGHBORHOOD_PRIMARY, Address.ADDRESS, "fk_address_neighborhood1", Address.ADDRESS.NEIGHBORHOOD_ID);
        public static final ForeignKey<CityRecord, ProvinceRecord> FK_CITY_PROVINCE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_PROVINCE_PRIMARY, City.CITY, "fk_city_province1", City.CITY.PROVINCE_ID);
        public static final ForeignKey<CourrierRecord, AddressRecord> FK_COURRIER_ADDRESS1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ADDRESS_PRIMARY, Courrier.COURRIER, "fk_courrier_address1", Courrier.COURRIER.ADDRESS_ID);
        public static final ForeignKey<CourrierAvailabilityRecord, CourrierRecord> FK_COURRIER_HAS_AVAILABILITY_COURRIER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_COURRIER_PRIMARY, CourrierAvailability.COURRIER_AVAILABILITY, "fk_courrier_has_availability_courrier1", CourrierAvailability.COURRIER_AVAILABILITY.COURRIER_ID);
        public static final ForeignKey<CourrierAvailabilityRecord, AvailabilityRecord> FK_COURRIER_HAS_AVAILABILITY_AVAILABILITY1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_AVAILABILITY_PRIMARY, CourrierAvailability.COURRIER_AVAILABILITY, "fk_courrier_has_availability_availability1", CourrierAvailability.COURRIER_AVAILABILITY.AVAILABILITY_ID);
        public static final ForeignKey<CourrierHasNeighborhoodRecord, CourrierRecord> FK_COURRIER_HAS_NEIGHBORHOOD_COURRIER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_COURRIER_PRIMARY, CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD, "fk_courrier_has_neighborhood_courrier1", CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD.COURRIER_ID);
        public static final ForeignKey<CourrierHasNeighborhoodRecord, NeighborhoodRecord> FK_COURRIER_HAS_NEIGHBORHOOD_NEIGHBORHOOD1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_NEIGHBORHOOD_PRIMARY, CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD, "fk_courrier_has_neighborhood_neighborhood1", CourrierHasNeighborhood.COURRIER_HAS_NEIGHBORHOOD.NEIGHBORHOOD_ID);
        public static final ForeignKey<CustomerHasAddressRecord, AddressRecord> FK_CUSTOMER_HAS_ADDRESS_ADDRESS1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ADDRESS_PRIMARY, CustomerHasAddress.CUSTOMER_HAS_ADDRESS, "fk_customer_has_address_address1", CustomerHasAddress.CUSTOMER_HAS_ADDRESS.ADDRESS_ID);
        public static final ForeignKey<CustomerHasAddressRecord, TypeAddressRecord> FK_CUSTOMER_HAS_ADDRESS_TYPE_ADDRESS1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_TYPE_ADDRESS_PRIMARY, CustomerHasAddress.CUSTOMER_HAS_ADDRESS, "fk_customer_has_address_type_address1", CustomerHasAddress.CUSTOMER_HAS_ADDRESS.TYPE_ADDRESS_ID);
        public static final ForeignKey<CustomerHasAddressRecord, CustomerRecord> FK_CUSTOMER_HAS_ADDRESS_CUSTOMER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_CUSTOMER_PRIMARY, CustomerHasAddress.CUSTOMER_HAS_ADDRESS, "fk_customer_has_address_customer1", CustomerHasAddress.CUSTOMER_HAS_ADDRESS.CUSTOMER_ID);
        public static final ForeignKey<DeliveryRecord, CourrierRecord> FK_DELIVERY_COURRIER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_COURRIER_PRIMARY, Delivery.DELIVERY, "fk_delivery_courrier1", Delivery.DELIVERY.COURRIER_ID);
        public static final ForeignKey<DeliveryHasStatusDeliveryDomainRecord, DeliveryRecord> FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_DELIVERY1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_DELIVERY_PRIMARY, DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN, "fk_delivery_has_status_delivery_domain_delivery1", DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN.DELIVERY_ID);
        public static final ForeignKey<DeliveryHasStatusDeliveryDomainRecord, StatusDeliveryDomainRecord> FK_DELIVERY_HAS_STATUS_DELIVERY_DOMAIN_STATUS_DELIVERY_DOMAIN1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STATUS_DELIVERY_DOMAIN_PRIMARY, DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN, "fk_delivery_has_status_delivery_domain_status_delivery_domain1", DeliveryHasStatusDeliveryDomain.DELIVERY_HAS_STATUS_DELIVERY_DOMAIN.STATUS_DELIVERY_DOMAIN_ID);
        public static final ForeignKey<OrderRecord, DeliveryRecord> FK_ORDER_DELIVERY1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_DELIVERY_PRIMARY, Order.ORDER, "fk_order_delivery1", Order.ORDER.DELIVERY_ID);
        public static final ForeignKey<OrderRecord, CustomerRecord> FK_ORDER_CUSTOMER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_CUSTOMER_PRIMARY, Order.ORDER, "fk_order_customer1", Order.ORDER.CUSTOMER_ID);
        public static final ForeignKey<OrderHasProductRecord, OrderRecord> FK_ORDER_HAS_PRODUCT_ORDER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ORDER_PRIMARY, OrderHasProduct.ORDER_HAS_PRODUCT, "fk_order_has_product_order1", OrderHasProduct.ORDER_HAS_PRODUCT.ORDER_ID);
        public static final ForeignKey<OrderHasProductRecord, ProductRecord> FK_ORDER_HAS_PRODUCT_PRODUCT1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_PRODUCT_PRIMARY, OrderHasProduct.ORDER_HAS_PRODUCT, "fk_order_has_product_product1", OrderHasProduct.ORDER_HAS_PRODUCT.PRODUCT_ID);
        public static final ForeignKey<OrderHasStatusRecord, OrderRecord> FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ORDER_PRIMARY, OrderHasStatus.ORDER_HAS_STATUS, "fk_order_has_order_status_domain_order1", OrderHasStatus.ORDER_HAS_STATUS.ORDER_ID);
        public static final ForeignKey<OrderHasStatusRecord, OrderStatusDomainRecord> FK_ORDER_HAS_ORDER_STATUS_DOMAIN_ORDER_STATUS_DOMAIN1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ORDER_STATUS_DOMAIN_PRIMARY, OrderHasStatus.ORDER_HAS_STATUS, "fk_order_has_order_status_domain_order_status_domain1", OrderHasStatus.ORDER_HAS_STATUS.ORDER_STATUS_DOMAIN_ID);
        public static final ForeignKey<OrderStoreRecord, OrderRecord> FK_ORDER_HAS_STORE_ORDER1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ORDER_PRIMARY, OrderStore.ORDER_STORE, "fk_order_has_store_order1", OrderStore.ORDER_STORE.ORDER_ID);
        public static final ForeignKey<OrderStoreRecord, StoreRecord> FK_ORDER_HAS_STORE_STORE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STORE_PRIMARY, OrderStore.ORDER_STORE, "fk_order_has_store_store1", OrderStore.ORDER_STORE.STORE_ID);
        public static final ForeignKey<ProductHasStoreRecord, ProductRecord> FK_PRODUCT_HAS_STORE_PRODUCT1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_PRODUCT_PRIMARY, ProductHasStore.PRODUCT_HAS_STORE, "fk_product_has_store_product1", ProductHasStore.PRODUCT_HAS_STORE.PRODUCT_ID);
        public static final ForeignKey<ProductHasStoreRecord, StoreRecord> FK_PRODUCT_HAS_STORE_STORE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STORE_PRIMARY, ProductHasStore.PRODUCT_HAS_STORE, "fk_product_has_store_store1", ProductHasStore.PRODUCT_HAS_STORE.STORE_ID);
        public static final ForeignKey<ProvinceRecord, CountryRecord> FK_PROVINCE_COUNTRY1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_COUNTRY_PRIMARY, Province.PROVINCE, "fk_province_country1", Province.PROVINCE.COUNTRY_ID);
        public static final ForeignKey<StoreRecord, StatusStoreRecord> FK_STORE_STATUS_STORE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STATUS_STORE_PRIMARY, Store.STORE, "fk_store_status_store1", Store.STORE.STATUS_STORE_ID);
        public static final ForeignKey<StoreHasAddressRecord, StoreRecord> FK_STORE_HAS_ADDRESS_STORE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STORE_PRIMARY, StoreHasAddress.STORE_HAS_ADDRESS, "fk_store_has_address_store1", StoreHasAddress.STORE_HAS_ADDRESS.STORE_ID);
        public static final ForeignKey<StoreHasAddressRecord, AddressRecord> FK_STORE_HAS_ADDRESS_ADDRESS1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_ADDRESS_PRIMARY, StoreHasAddress.STORE_HAS_ADDRESS, "fk_store_has_address_address1", StoreHasAddress.STORE_HAS_ADDRESS.ADDRESS_ID);
        public static final ForeignKey<StoreHasCousineRecord, StoreRecord> FK_STORE_HAS_COUSINE_STORE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_STORE_PRIMARY, StoreHasCousine.STORE_HAS_COUSINE, "fk_store_has_cousine_store1", StoreHasCousine.STORE_HAS_COUSINE.STOREID);
        public static final ForeignKey<StoreHasCousineRecord, CousineRecord> FK_STORE_HAS_COUSINE_COUSINE1 = Internal.createForeignKey(br.com.edfcbz.api.generatedclasses.Keys.KEY_COUSINE_PRIMARY, StoreHasCousine.STORE_HAS_COUSINE, "fk_store_has_cousine_cousine1", StoreHasCousine.STORE_HAS_COUSINE.COUSINE_ID);
    }
}
