/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses.tables;


import br.com.edfcbz.api.generatedclasses.Apirest;
import br.com.edfcbz.api.generatedclasses.Indexes;
import br.com.edfcbz.api.generatedclasses.Keys;
import br.com.edfcbz.api.generatedclasses.tables.records.DeliveryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Delivery extends TableImpl<DeliveryRecord> {

    private static final long serialVersionUID = 635762013;

    /**
     * The reference instance of <code>apirest.delivery</code>
     */
    public static final Delivery DELIVERY = new Delivery();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeliveryRecord> getRecordType() {
        return DeliveryRecord.class;
    }

    /**
     * The column <code>apirest.delivery.id</code>.
     */
    public final TableField<DeliveryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>apirest.delivery.courrier_id</code>.
     */
    public final TableField<DeliveryRecord, Integer> COURRIER_ID = createField("courrier_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>apirest.delivery.update</code>.
     */
    public final TableField<DeliveryRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>apirest.delivery</code> table reference
     */
    public Delivery() {
        this(DSL.name("delivery"), null);
    }

    /**
     * Create an aliased <code>apirest.delivery</code> table reference
     */
    public Delivery(String alias) {
        this(DSL.name(alias), DELIVERY);
    }

    /**
     * Create an aliased <code>apirest.delivery</code> table reference
     */
    public Delivery(Name alias) {
        this(alias, DELIVERY);
    }

    private Delivery(Name alias, Table<DeliveryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Delivery(Name alias, Table<DeliveryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Apirest.APIREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DELIVERY_FK_DELIVERY_COURRIER1_IDX, Indexes.DELIVERY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeliveryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DELIVERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeliveryRecord> getPrimaryKey() {
        return Keys.KEY_DELIVERY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeliveryRecord>> getKeys() {
        return Arrays.<UniqueKey<DeliveryRecord>>asList(Keys.KEY_DELIVERY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DeliveryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeliveryRecord, ?>>asList(Keys.FK_DELIVERY_COURRIER1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Delivery as(String alias) {
        return new Delivery(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Delivery as(Name alias) {
        return new Delivery(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Delivery rename(String name) {
        return new Delivery(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Delivery rename(Name name) {
        return new Delivery(name, null);
    }
}
