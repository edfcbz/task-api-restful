/*
 * This file is generated by jOOQ.
*/
package br.com.edfcbz.api.generatedclasses.tables.records;


import br.com.edfcbz.api.generatedclasses.tables.OrderHasStatus;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderHasStatusRecord extends UpdatableRecordImpl<OrderHasStatusRecord> implements Record4<Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = -1064587561;

    /**
     * Setter for <code>apirest.order_has_status.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>apirest.order_has_status.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>apirest.order_has_status.order_id</code>.
     */
    public void setOrderId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>apirest.order_has_status.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>apirest.order_has_status.order_status_domain_id</code>.
     */
    public void setOrderStatusDomainId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>apirest.order_has_status.order_status_domain_id</code>.
     */
    public Integer getOrderStatusDomainId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>apirest.order_has_status.update</code>.
     */
    public void setUpdate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>apirest.order_has_status.update</code>.
     */
    public Timestamp getUpdate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return OrderHasStatus.ORDER_HAS_STATUS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return OrderHasStatus.ORDER_HAS_STATUS.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return OrderHasStatus.ORDER_HAS_STATUS.ORDER_STATUS_DOMAIN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return OrderHasStatus.ORDER_HAS_STATUS.UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getOrderStatusDomainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getOrderStatusDomainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatusRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatusRecord value2(Integer value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatusRecord value3(Integer value) {
        setOrderStatusDomainId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatusRecord value4(Timestamp value) {
        setUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderHasStatusRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderHasStatusRecord
     */
    public OrderHasStatusRecord() {
        super(OrderHasStatus.ORDER_HAS_STATUS);
    }

    /**
     * Create a detached, initialised OrderHasStatusRecord
     */
    public OrderHasStatusRecord(Integer id, Integer orderId, Integer orderStatusDomainId, Timestamp update) {
        super(OrderHasStatus.ORDER_HAS_STATUS);

        set(0, id);
        set(1, orderId);
        set(2, orderStatusDomainId);
        set(3, update);
    }
}
